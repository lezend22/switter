{"version":3,"sources":["fbase.js","routes/Auth.js","components/Sweet.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","newAccount","setAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","console","log","onClickSocial","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","className","icon","faTwitter","color","size","style","marginBottom","type","placeholder","required","onClick","potato","faGoogle","faGithub","Sweet","sweetObj","check","editing","setEditing","text","newSweet","setNewSweet","toggleEditing","prev","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmenturl","update","autoFocus","src","faTrash","faPencilAlt","Home","userObj","sweet","setSweet","sweets","setSweets","attachment","setAttachment","useEffect","collection","onSnapshot","snap","dbArray","docs","map","document","data","fileRef","ref","child","uid","uuidv4","putString","uploadResponse","getDownloadURL","insertObj","createdAt","Date","now","createdId","add","maxLength","for","faPlus","accept","files","length","theFile","reader","FileReader","readAsDataURL","onloadend","result","currentTarget","opacity","backgroundImage","faTimes","marginTop","Profile","refreshUser","setEditProfile","displayName","newDisplayName","setDisplayName","history","useHistory","onDisplaySubmit","updateProfile","then","alert","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","IsLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","currentUser","SetIsLoggedIn","setUserObj","onAuthStateChanged","user","getFullYear","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cb20acf9.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService, firebaseInstance } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst inputStyles = {};\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // eslint-disable-next-line\n  const [newAccount, setAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    //target goes to <input>form\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"useremail\") {\n      setEmail(value);\n    } else if (name === \"userPassword\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n        //create account\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n        //log in\n      }\n    } catch (error) {\n      setError(error.message);\n      console.log(\"check out auth\");\n    }\n  };\n  const setToggle = () => {\n    setAccount((potato) => !potato);\n  };\n  const onClickSocial = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n      //get google\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n      //get github\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          type=\"text\"\n          name=\"useremail\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange} //because onchange is in here\n          className=\"authInput\"\n        ></input>\n        <input\n          type=\"password\"\n          name=\"userPassword\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          className=\"authInput\"\n          onChange={onChange}\n        ></input>\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Log in\"}\n        ></input>\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={setToggle} className=\"authSwitch\">\n        {newAccount ? \"Sign in\" : \"Create Account\"}\n        {console.log(newAccount)}\n      </span>\n      <div className=\"authBtns\">\n        <button onClick={onClickSocial} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onClickSocial} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Sweet = ({ sweetObj, check }) => {\n  const [editing, setEditing] = useState(false);\n  const [newSweet, setNewSweet] = useState(sweetObj.text);\n\n  const toggleEditing = () => setEditing((prev) => !prev); //returns oposite previous value\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure want to Delete it?\");\n    if (ok) {\n      await dbService.doc(`sweet/${sweetObj.id}`).delete();\n      await storageService.refFromURL(sweetObj.attachmenturl).delete();\n    }\n  };\n\n  const onEditChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewSweet(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`sweet/${sweetObj.id}`).update({ text: newSweet });\n    setEditing(false);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your sweet!\"\n              value={newSweet}\n              required\n              autoFocus\n              onChange={onEditChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{sweetObj.text}</h4>\n          {sweetObj.attachmenturl && <img src={sweetObj.attachmenturl} />}\n          {check && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Sweet;\n","import React, { useEffect, useState } from \"react\";\nimport Sweet from \"../components/Sweet\";\nimport { dbService, storageService } from \"../fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Home = ({ userObj }) => {\n  const [sweet, setSweet] = useState(\"\");\n  const [sweets, setSweets] = useState([]);\n  const [attachment, setAttachment] = useState(null);\n\n  const getSweets = () => {\n    dbService.collection(\"sweet\").onSnapshot((snap) => {\n      const dbArray = snap.docs.map((document) => ({\n        id: document.id, //its not same with createdID\n        ...document.data(),\n      }));\n      setSweets(dbArray);\n      console.log(\"getsweet\");\n    });\n  };\n\n  useEffect(() => {\n    getSweets();\n    console.log(\"homeeffect\");\n  }, []);\n\n  const onSubmit = async (event) => {\n    if (sweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmenturl = \"\";\n    if (attachment !== null) {\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const uploadResponse = await fileRef.putString(attachment, \"data_url\");\n      attachmenturl = await uploadResponse.ref.getDownloadURL();\n    }\n    const insertObj = {\n      text: sweet,\n      createdAt: Date.now(),\n      createdId: userObj.uid,\n      attachmenturl,\n    };\n    await dbService.collection(\"sweet\").add(insertObj);\n    setSweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSweet(value);\n  };\n\n  const onChangeFile = (event) => {\n    const {\n      target: { files },\n    } = event;\n    if (files.length !== 0) {\n      //파일선택안하고 취소할시 생성되는 bugfix\n      const theFile = files[0]; //theFile의 format : File\n      const reader = new FileReader();\n      reader.readAsDataURL(theFile); //특정file에서 읽어오는역활\n      reader.onloadend = (event) => {\n        //eventListner에서 읽어옴\n        const {\n          currentTarget: { result },\n        } = event;\n        setAttachment(result);\n      };\n    }\n  };\n  const onAttachment = (event) => {\n    setAttachment(\"\");\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"factoryForm\">\n        <div className=\"factoryInput__container\">\n          <input\n            className=\"factoryInput__input\"\n            value={sweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"What's on your mind?\"\n            maxLength={120}\n          />\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n        </div>\n        <label for=\"attach-file\" className=\"factoryInput__label\">\n          <span>Add photos</span>\n          <FontAwesomeIcon icon={faPlus} />\n        </label>\n        <input\n          id=\"attach-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onChangeFile}\n          style={{\n            opacity: 0,\n          }}\n        ></input>\n        {attachment && (\n          <div className=\"factoryForm__attachment\">\n            <img\n              src={attachment}\n              style={{\n                backgroundImage: attachment,\n              }}\n            />\n            <div className=\"factoryForm__clear\" onClick={onAttachment}>\n              <span>Remove</span>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n          </div>\n        )}\n      </form>\n      <div style={{ marginTop: 30 }}>\n        {sweets.map((sweet) => (\n          <Sweet\n            sweetObj={sweet}\n            key={sweet.id}\n            check={sweet.createdId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Sweet from \"../components/Sweet\";\nimport { authService, dbService } from \"../fbase\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const [sweets, setSweets] = useState([]);\n  const [EditProfile, setEditProfile] = useState(false);\n  const [newDisplayName, setDisplayName] = useState(userObj.displayName);\n  const history = useHistory();\n  const onLogoutClick = (event) => {\n    authService.signOut();\n    history.push(\"/\"); //if user sign out finds '/' from history stack\n  };\n\n  /* const getMySweets = () => {\n    dbService.collection(\"sweet\").onSnapshot((snap) => {\n      const dbArray = snap.docs.map((document) => ({\n        id: document.id, //its not same with createdID\n        ...document.data(),\n      }));\n      setSweets(dbArray);\n      /* const data = await dbService\n      .collection(\"sweet\")\n      .where(\"createdId\", \"==\", userObj.uid)\n      .get(); //should put string in first prop\n    console.log(data.docs.map((doc) => doc.data()));\n    const dbArray = data.docs.map((doc) => doc.data());\n    setSweets(dbArray);\n    console.log(sweets); */\n\n  const onChangeName = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setDisplayName(value);\n  };\n\n  const onDisplaySubmit = async (event) => {\n    event.preventDefault();\n    if (newDisplayName !== userObj.displayName) {\n      await userObj\n        .updateProfile({ displayName: newDisplayName })\n        .then(() => window.alert(\"Profile update Successfully!\"));\n      setEditProfile(false);\n      refreshUser();\n    }\n  };\n\n  const onClickProfile = () => {\n    setEditProfile((prev) => !prev);\n  };\n\n  useEffect(() => {\n    //getMySweets();\n    console.log(\"profileEffect\");\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {/* <button onClick={onClickProfile}>Edit Profile</button>\n      {EditProfile && ( */}\n      <form onSubmit={onDisplaySubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          placeholder=\"Change Display Name\"\n          value={newDisplayName}\n          autoFocus\n          onChange={onChangeName}\n          className=\"formInput\"\n        ></input>\n        <input\n          type=\"submit\"\n          value=\"Update Name\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>\n        Log Out\n      </span>\n      {/* <div>\n        {sweets.map((sweet) => (\n          <Sweet\n            sweetObj={sweet}\n            key={sweet.id}\n            check={sweet.createdId === userObj.uid}\n          />\n        ))}\n      </div> */}\n    </div>\n  );\n};\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>Profile</span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ refreshUser, IsLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {IsLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {IsLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n//same path but decides which Links to go\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"../fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [IsLoggedIn, SetIsLoggedIn] = useState(authService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        SetIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        SetIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  });\n\n  const refreshUser = () => {\n    setUserObj({ ...authService.currentUser });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          IsLoggedIn={IsLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing,,,\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Switter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n// eslint-disable-next-line\nimport firebase from \"firebase\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}